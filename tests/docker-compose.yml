services:
  mongodb:
    image: mongo:latest
    container_name: labtasker-mongodb-test
    environment:
      - MONGO_INITDB_ROOT_USERNAME=test_user
      - MONGO_INITDB_ROOT_PASSWORD=test_password
      - MONGO_INITDB_DATABASE=test_db
    command: ["--replSet", "rs0", "--keyFile", "/data/configdb/mongo-keyfile"]
    entrypoint: ["/usr/local/bin/docker-entrypoint-wrapped.sh"]
    volumes:
      - mongo-test-data:/data/db
      - mongo-test-keyfile:/data/configdb:rw
      - ../docker/mongodb/docker-entrypoint-wrapped.sh:/usr/local/bin/docker-entrypoint-wrapped.sh:ro
      - ../docker/mongodb/init.d:/docker-entrypoint-initdb.d/
      - ../docker/mongodb/post-init.d:/docker-entrypoint-post-initdb.d/
    ports:
      - 27017:27017 # Expose on a different port to avoid conflict with production
    networks:
      - labtasker-test-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: no

  # api:
  #   build:
  #     context: ..
  #     dockerfile: Dockerfile
  #     network: host
  #   container_name: labtasker-api-test
  #   environment:
  #     - DB_USER=test_user
  #     - DB_PASSWORD=test_password
  #     - DB_NAME=test_db
  #     - DB_HOST=mongodb
  #     - DB_PORT=27017
  #     - ADMIN_USERNAME=test_admin
  #     - ADMIN_PASSWORD=test_admin_password
  #     - API_HOST=0.0.0.0
  #     - API_PORT=8081 # Use a different port for the test API
  #     - SECURITY_PEPPER=test_pepper
  #   ports:
  #     - "8081:8081" # Expose API for testing
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  #   networks:
  #     - labtasker-test-network
  #   restart: always

  # pytest:
  #   image: python:3.11-slim
  #   container_name: labtasker-pytest
  #   working_dir: /app
  #   volumes:
  #     - .:/app
  #   environment:
  #     - PYTHONPATH=/app
  #     - DB_USER=test_user
  #     - DB_PASSWORD=test_password
  #     - DB_NAME=test_db
  #     - DB_HOST=mongodb
  #     - DB_PORT=27017
  #   command: ["pytest", "--maxfail=3", "--disable-warnings", "-v"]
  #   depends_on:
  #     api:
  #       condition: service_started # Waits for the API to start
  #   networks:
  #     - labtasker-test-network

volumes:
  mongo-test-data:
  mongo-test-keyfile:

networks:
  labtasker-test-network:
    driver: bridge
